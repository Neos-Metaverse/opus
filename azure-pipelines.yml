trigger:
- neos-release

strategy:
  matrix:
    #linux:
    #  imageName: 'ubuntu-latest'
    #  cmakeTarget: 'Unix Makefiles'
    #  sourceFolder: ''
    #  sourceFile: 'libopus.so'
    #  artifactName : 'linux_x64'
    #windows:
    #  imageName: 'windows-latest'
    #  sourceFolder: 'win32\VS2015\x64\ReleaseDLL\'
    #  sourceFile: 'opus.dll'
    #  artifactName : 'windows_x64'
    android:
      imageName: 'windows-latest'
      cmakeTarget: 'Ninja'
      cmakeArgs: '$(ANDROID_NDK_PATH)/build/cmake/android.toolchain.cmake'
      sourceFolder: ''
      sourceFile: 'libopus.so'
      artifactName : 'android_ARMv7'
      buildCMAKE : true

pool:
  vmImage: $(imageName)

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      echo $(ANDROID_NDK_PATH)
      tree /F /A $(ANDROID_NDK_PATH)

- task: VSBuild@1
  inputs:
    solution: 'win32\VS2015\opus.sln'
    msbuildArgs: '/p:WindowsTargetPlatformVersion=10.0.19041.0'
    platform: 'x64'
    configuration: 'ReleaseDLL'
    maximumCpuCount: true
    msbuildArchitecture: 'x64'
  condition: $(buildVS)

- task: CMake@1
  inputs:
    workingDirectory: 
    cmakeArgs: ' CMakeLists.txt -DOPUS_BUILD_SHARED_LIBRARY=ON $(cmakeArgs) -G "$(cmakeTarget)"'
  condition: $(buildCMAKE)

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      tree
      make
      tree
  condition: eq( variables['Agent.OS'], 'Linux' )

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(sourceFolder)'
    Contents: '$(sourceFile)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'windows_x64'
    publishLocation: 'Container'